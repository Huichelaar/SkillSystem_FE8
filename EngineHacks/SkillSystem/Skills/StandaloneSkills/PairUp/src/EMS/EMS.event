// Repointing and adding savers & loaders to Expanded Modular Save.
#define DeclSaveChunk(aOffset, aSize, apSaver, apLoader) "SHORT (aOffset) (aSize); POIN (apSaver) (apLoader); SHORT 0 0"
#define DeclSaveChunk(aOffset, aSize, apSaver, apLoader, aIdentifier) "SHORT (aOffset) (aSize); POIN (apSaver) (apLoader); SHORT (aIdentifier) 0"
#define DeclSaveChunkEnd "SHORT 0xFFFF 0 0 0 0 0"

PUSH

  // Clear pair-up gauges and unset pair-up flag when starting a new game save.
  // We use redundancy introduced in the original function by ExModularSave to hook.
  ORG 0xA4F40
    callHack_r0(PAU_clearPairUpData)
    SHORT $E01E // b later; don't save units just yet

  // Repoint EMS game- and suspendsavechunks.
  ORG gGameSaveChunks1Address
    POIN PAU_gGameSaveChunks
  ORG gGameSaveChunks2Address
    POIN PAU_gGameSaveChunks
  ORG gGameSaveChunks3Address
    POIN PAU_gGameSaveChunks
  ORG gSuspendSaveChunks1Address
    POIN PAU_gSuspendSaveChunks
  ORG gSuspendSaveChunks2Address
    POIN PAU_gSuspendSaveChunks
  ORG gSuspendSaveChunks3Address
    POIN PAU_gSuspendSaveChunks

POP

// Taken verbatim from ROMhack
ALIGN 4; PAU_gGameSaveChunks:
BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xC5 0x77 0x01 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x4C 0x00 0xF5 0x34 0xB8 0x08 0x25 0x35 0xB8 0x08 0x01 0x00 0x00 0x00 0x4C 0x00 0x10 0x00 0xE1 0x59 0x0A 0x08 0x01 0x5A 0x0A 0x08 0x00 0x00 0x00 0x00 0x5C 0x00 0x60 0x04 0x65 0x42 0x0A 0x08 0x1D 0x42 0x0A 0x08 0x04 0x00 0x00 0x00 0xBC 0x04 0xC0 0x00 0x89 0x42 0x0A 0x08 0x49 0x42 0x0A 0x08 0x05 0x00 0x00 0x00 0x7C 0x05 0x19 0x00 0x51 0x31 0x0A 0x08 0x99 0x31 0x0A 0x08 0x06 0x00 0x00 0x00 0x95 0x05 0x04 0x00 0xE1 0x35 0xB8 0x08 0xFD 0x35 0xB8 0x08 0x07 0x00 0x00 0x00 0x99 0x05 0x48 0x00 0x19 0x36 0xB8 0x08 0x31 0x36 0xB8 0x08 0x08 0x00 0x00 0x00 0xE1 0x05 0x18 0x00 0x49 0x36 0xB8 0x08 0x65 0x36 0xB8 0x08 0x00 0x00 0x00 0x00 0xF9 0x05 0xC4 0x08 0xF1 0x3B 0xB8 0x08 0x39 0x3C 0xB8 0x08 0x02 0x00 0x00 0x00 0xBD 0x0E 0x90 0x01 0x7D 0x44 0xB8 0x08 0x9D 0x44 0xB8 0x08 0x03 0x00 0x00 0x00
DeclSaveChunk(0x104D, 0x2, PAU_savePairUpData, PAU_loadPairUpData)  // Save and load pair-up data.
DeclSaveChunkEnd; SHORT 0
DeclSaveChunkEnd; SHORT 0       // Some redundancy in case someone else wants to add savers/loaders in the future.
DeclSaveChunkEnd; SHORT 0
DeclSaveChunkEnd; SHORT 0
DeclSaveChunkEnd;

ALIGN 4; PAU_gSuspendSaveChunks:
BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xC5 0x77 0x01 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x4C 0x00 0xF5 0x34 0xB8 0x08 0x25 0x35 0xB8 0x08 0x01 0x00 0x00 0x00 0x4C 0x00 0x38 0x00 0x85 0x36 0xB8 0x08 0xB1 0x36 0xB8 0x08 0x00 0x00 0x00 0x00 0x84 0x00 0x18 0x00 0x49 0x36 0xB8 0x08 0x65 0x36 0xB8 0x08 0x00 0x00 0x00 0x00 0x9C 0x00 0x00 0x02 0x71 0x63 0x0A 0x08 0x8D 0x63 0x0A 0x08 0x00 0x00 0x00 0x00 0x9C 0x02 0x60 0x04 0x65 0x42 0x0A 0x08 0x1D 0x42 0x0A 0x08 0x00 0x00 0x00 0x00 0xFC 0x06 0xC0 0x00 0x89 0x42 0x0A 0x08 0x49 0x42 0x0A 0x08 0x00 0x00 0x00 0x00 0xBC 0x07 0x10 0x00 0x25 0x38 0xB8 0x08 0x51 0x38 0xB8 0x08 0x00 0x00 0x00 0x00 0xCC 0x07 0x19 0x00 0x51 0x31 0x0A 0x08 0x99 0x31 0x0A 0x08 0x00 0x00 0x00 0x00 0xE5 0x07 0x05 0x00 0x31 0x31 0x0A 0x08 0x71 0x31 0x0A 0x08 0x00 0x00 0x00 0x00 0xEA 0x07 0x48 0x00 0x19 0x36 0xB8 0x08 0x31 0x36 0xB8 0x08 0x08 0x00 0x00 0x00 0x32 0x08 0x0C 0x00 0x75 0x38 0xB8 0x08 0xA1 0x38 0xB8 0x08 0x00 0x00 0x00 0x00 0x3E 0x08 0x04 0x00 0xC5 0x38 0xB8 0x08 0xED 0x38 0xB8 0x08 0x00 0x00 0x00 0x00 0x42 0x08 0x5C 0x0A 0x81 0x3C 0xB8 0x08 0xC9 0x3C 0xB8 0x08 0x00 0x00 0x00 0x00 0x9E 0x12 0xF0 0x0A 0xA1 0x3D 0xB8 0x08 0xE9 0x3D 0xB8 0x08 0x00 0x00 0x00 0x00 0x8E 0x1D 0x60 0x04 0x11 0x3D 0xB8 0x08 0x59 0x3D 0xB8 0x08 0x00 0x00 0x00 0x00 0xEE 0x21 0x90 0x01 0x7D 0x44 0xB8 0x08 0x9D 0x44 0xB8 0x08 0x00 0x00 0x00 0x00 0x7E 0x23 0x40 0x04 0x39 0x39 0xB8 0x08 0x45 0x39 0xB8 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x11 0x39 0xB8 0x08 0x00 0x00 0x00 0x00
DeclSaveChunk(0x27BE, 0x2, PAU_savePairUpData, PAU_loadPairUpData)  // Save and load pair-up data.
DeclSaveChunkEnd; SHORT 0
DeclSaveChunkEnd; SHORT 0       // Some redundancy in case someone else wants to add savers/loaders in the future.
DeclSaveChunkEnd; SHORT 0
DeclSaveChunkEnd; SHORT 0
DeclSaveChunkEnd;
