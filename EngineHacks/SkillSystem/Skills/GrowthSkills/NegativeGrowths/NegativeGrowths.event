// Hooks to enable Negative Growths skill.

PUSH

  // Set minimum stat value after level up to zero.
  ORG 0x2BF24
    jumpToHack(NTG_statMins)

  // Allow GetStatIncrease to also decrease stat if growth is negative.
  ORG 0x2B9A0
    jumpToHack(NTG_decreaseStat)
  
  // Enable bar and arrow down during statDOWN
  ORG 0x74DE4
    // Change number palette to red palette.
    SHORT 0x9804      // ldr  r0, [sp, #0x10]
    SHORT 0x3001      // add  r0, #0x1
    SHORT 0x9004      // str  r0, [sp, #0x10]

    // Change bar and arrow palette to red palette.
    SHORT 0x2010      // mov  r0, #0x10
    SHORT 0x0200      // lsl  r0, #0x8
    SHORT 0x182D      // add  r5, r0
    
    SHORT 0x4A00      // ldr  r2, =StatDownFrameData
    SHORT 0xE7E4      // b    #0x8074DBE
    POIN NTG_StatDownFrameData
  
  // Display big number when statDOWN.
  ORG 0x74E76           // Unconditional branch. Negative value big digit.
    SHORT 0xE003
  ORG 0x74C1C           // Use correct digit for negative values.
    SHORT 0x2800        // cmp   r0, #0x0
    SHORT 0xDA00        // bge   L1
    SHORT 0x4240        // neg   r0, r0
    SHORT 0x3801        // L1: sub   r0, #0x1
    SHORT 0x0044        // lsl   r4, r0, #0x1
    SHORT 0x1C20        // mov   r0, r4
  ORG 0x74EE4           // Unconditional branch. Negative value small digit.
    SHORT 0xE002

POP

ALIGN 4; NTG_decreaseStat:
#incbin "decreaseStat.dmp"
ALIGN 4; NTG_statMins:
#include "statMins.lyn.event"

// OAMData. Based on statUP OAMData at 0x5C8DE4
ALIGN 4; NTG_Frame1:
SHORT 0x4000 0x2000 0x0040 0xFFF8 (-20) 0x0
SHORT 0x0000 0x0000 0x0003 0xFFDB 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0

NTG_Frame2:
SHORT 0x0000 0x6000 0x0022 0xFFF8 (-17) 0x0
SHORT 0x4000 0x0000 0x0004 0xFFD2 0xFFF8 0x0
SHORT 0x0000 0x0000 0x0006 0xFFE2 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame3:
SHORT 0x0000 0x6000 0x0024 0xFFF8 (-17) 0x0
SHORT 0x4000 0x4000 0x0007 0xFFCC 0xFFF8 0x0
SHORT 0x0000 0x0000 0x000B 0xFFEC 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame4:
SHORT 0x0000 0x6000 0x0024 0xFFF8 (-14) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame5:
SHORT 0x0000 0x6000 0x0022 0xFFF8 (-12) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame6:
SHORT 0x4000 0x2000 0x0040 0xFFF8 (-13) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame7:
SHORT 0x0000 0x6000 0x0022 0xFFF8 (-14) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame8:
SHORT 0x0000 0x6000 0x0026 0xFFF8 (-22) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame9:
SHORT 0x0000 0x6000 0x0028 0xFFF8 (-22) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0
 
NTG_Frame10:
SHORT 0x0000 0x6000 0x002A 0xFFF8 (-22) 0x0
SHORT 0x4000 0x4000 0x000C 0xFFC8 0xFFF8 0x0
SHORT 0x4000 0x0000 0x0010 0xFFE8 0xFFF8 0x0
SHORT 0x0001 0x0000 0x0000 0x0000 0x0000 0x0

// FrameData. Based on statUP framedata at 0x5C92A0
ALIGN 4; NTG_StatDownFrameData:
POIN NTG_Frame1|1
POIN NTG_Frame2|1
POIN NTG_Frame3|1
POIN NTG_Frame4|2
POIN NTG_Frame5|2
POIN NTG_Frame6|3
POIN NTG_Frame5|2
POIN NTG_Frame7|2
POIN NTG_Frame8|1
POIN NTG_Frame9|(6<<28)
POIN NTG_Frame10|(2<<28)
WORD 0x80000000       // End